#!/bin/bash

#Permisos, permissions:
#chmod 700 scripFullScan (Permisons only for  read,write and execution  to root user )
#chmod 700 scripFullscan (Solo tiene permisos de lectura, escritura y ejecucion para el usuario root)

#Address to mysql motor
#Direccion hacia el motor SQL
rutaMySQL=/usr/local/mysql/bin/mysql

#Name of the file to export to the MySQL database without extension
#Nombre del fichero a exportar a la bbdd en MySQL sin extension
nombreFichero="$1"


#Address to csv file
#Direccion hacia el archivo csv a exportar en la BBDD
rutaCSV=/Library/WebServer/Documents/script

#Save the data to have a log control 
#Para tener un log con fecha de cualquiera error
date >>"$rutaCSV"/MySQLlogExportacion.txt


echo Start....


#Variable to use to iteration
#Variable a usar para iterar 
var=0;


## Transformar el archivo del formato latin al utf8
#Transform the file from iso_8859_1 latin 1 eur occidental to utf-8 (shell need it)
iconv -f ISO_8859-1 -t UTF-8 "$rutaCSV"/"$nombreFichero".csv > "$rutaCSV"/"$nombreFichero"UTF8.csv 


#In order to delete the double quotes (because mysql has conflict when importing it) sed needs to work on UTF8 format
#Para poder eliminar las comillas dobles (debido a que  mysql tiene conflictos a la hora de importar) sed necesita al archivo  en formato UTF8
sed 's/\"//g' "$rutaCSV"/"$nombreFichero"UTF8.csv  > "$rutaCSV"/"$nombreFichero"UTF8SinComillas.csv 


#Now transform again to UTF8 and in this way mysql server  can import correctly
#Ahora transformamos de nuevo el formato de latin a UTF8 y de esta manera el servidor MySQL puede importar correctamente
iconv -f UTF-8 -t ISO_8859-1 "$rutaCSV"/"$nombreFichero"UTF8SinComillas.csv > "$rutaCSV"/"$nombreFichero"LatinSinComillas.csv 


#Columns or titles of csv file:
#Columnas o titulos del archivo csv :
awk 'BEGIN {FS=";";RS="\r"} {if (NR==1) for (i=1;i<=NF;i++) print $i}' "$rutaCSV"/"$nombreFichero"UTF8.csv | 
   awk 'BEGIN {FS="\r"; RS=""}  {print $0} '> "$rutaCSV"/resumenColumnas


#To count and know the numbers of columns/titles of csv di and put in a local variable
#Para contar y saber el numero de campos/titulos del archivo csv y lo pongo en una variable lcoal 
 contador=$(awk 'BEGIN {FS="\r"; RS=""}  {print NF} ' "$rutaCSV"/resumenColumnas) 


#Use the path variable to know the maximum value of every column and put in the path
#Sabiendo el numero de columnas ya puesta en la variable contador,  
#Busco el maximo valor de cada columna y las pongo en el path ($@)
set $(for ((i=1;i<=$contador;i++)); do awk 'BEGIN {FS=";";RS="\r";MAX=length($'$i')}
  {if ( NR>=2 && length($'$i') > MAX )  print MAX=length($'$i'),$'$i'}  ' "$rutaCSV"/"$nombreFichero"UTF8.csv |
    tail -1;done | awk '{print $1} ')


#Modification of global variable into mysql server in order to turn on  the import option
#Modificacion de la variable global de mysql server para poder activar la opcion de importacion
echo "SET GLOBAL local_infile=ON;" >"$rutaCSV"/tempsqlfile;


#Creation mysql shell script: 
#Crear el scrip de la base de datos sql
echo USE baseDeDatos';
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+01:00";
DROP TABLE IF EXISTS '"$nombreFichero"';
'CREATE TABLE "$nombreFichero (" >>"$rutaCSV"/tempsqlfile;


#A loop to put on every variale it's maximum dimesion:
#Bucle para poner en cada variable su maximo valor:
for v in "$@"; do ((var=var+1));  
echo $(awk 'BEGIN {FS="\r"; RS=""}  {print "`"$'$var'"`"}' "$rutaCSV"/resumenColumnas) varchar"($v)" DEFAULT NULL,; 
  done >>"$rutaCSV"/tempsqlfile; var=0; 


#Sed command to del the last comma
#Comando Sed para borrar la ultima coma del bucle de creacion de los campos varchar 
sed '$s/.$//' <"$rutaCSV"/tempsqlfile >"$rutaCSV"/fileOut.sql


#Set up the last parameters to the table
#Configurando los ultimos parametros de la tabla
echo ") ENGINE=InnoDB DEFAULT CHARSET=utf8;">>"$rutaCSV"/fileOut.sql


#Load the csv file into the BBDD
#Carga del archivo csv dentro de la base de datos 
echo "load data local infile '"$rutaCSV"/"$nombreFichero"LatinSinComillas.csv' 
 into table $nombreFichero fields terminated by ';'  lines terminated by '\\r';" >>"$rutaCSV"/fileOut.sql


#Delete the first row which is the name of the variables ( title) into the csv file
#Borrar la primera columna la cual tiene el nombre de las variables (titulos) exportadas del CSV
echo "DELETE FROM $nombreFichero LIMIT 1;" >>"$rutaCSV"/fileOut.sql


#Para borrar el ultimo salto de linea
#To delete the last end of line
ultimaColumna=$(awk 'END{print}' "$rutaCSV"/resumenColumnas)
#awk 'END{print}' "$rutaCSV"/resumenColumnas>"$rutaCSV"/ultimaColumna;
#ultimaColumna=$(sed '$ d' "$rutaCSV"/ultimaColumna);
echo "UPDATE $nombreFichero SET $ultimaColumna = REPLACE($ultimaColumna, '\\r', '');" >>"$rutaCSV"/fileOut.sql



#Modification of global variable into mysql server in order to turn off the import option (for security)
#Modificacion de la variable global de mysql server para poder desactivar la opcion de importacion (por seguridad)
echo "SET GLOBAL local_infile=OFF;" >>"$rutaCSV"/fileOut.sql;



#create the ddbb inside mysql motor
#creacion de la bbdd dentro del motor mysql
"$rutaMySQL" -u root --password=root -e "create database baseDeDatos" 2>/MySQLlogExportacion.txt; 
#outside mysql motor
#"$rutaMySQL" -u root -h 127.0.0.1 --password=root -e "create database baseDeDatos" 2>/MySQLlogExportacion.txt; 

#Log in into mysql server 
#Inicio de sesion dentro del motor de mysq
"$rutaMySQL" -u root  --password=root 2>/MySQLlogExportacion.txt < "$rutaCSV"/fileOut.sql
#outside  mysql motor:
#"$rutaMySQL" -u root -h 127.0.0.1 --password=root 2>/MySQLlogExportacion.txt < "$rutaCSV"/fileOut.sql


#Delete all temporaly files required by shell programs
#Borrar los archivos temporales requiridos por los diferentes programas shell
rm "$rutaCSV"/tempsqlfile 
rm "$rutaCSV"/resumenColumnas 
rm "$rutaCSV"/"$nombreFichero"UTF8.csv
rm "$rutaCSV"/fileOut.sql
rm "$rutaCSV"/"$nombreFichero"LatinSinComillas.csv
rm "$rutaCSV"/"$nombreFichero"UTF8SinComillas.csv


#Delete the local variables used
#Borrado de las variables locales usadas
unset var
unset contador
unset ultimaColumna
unset rutaMySQL
unset rutaCSV

echo Done

exit